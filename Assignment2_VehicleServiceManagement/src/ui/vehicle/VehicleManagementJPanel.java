/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.vehicle;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Owner;
import model.OwnerDirectory;
import model.ServiceCatalog;
import model.Vehicle;
import model.VehicleDirectory;

/**
 *
 * @author tisaac
 */
public class VehicleManagementJPanel extends javax.swing.JPanel {
    
    JPanel mainWorkArea;
    OwnerDirectory ownerDir;

    /**
     * Creates new form VehicleManagementJPanel
     */
    public VehicleManagementJPanel(JPanel mainWorkArea, OwnerDirectory ownerDir) {
        initComponents();
        this.mainWorkArea = mainWorkArea;
        this.ownerDir = ownerDir;
        
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageVehicle = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnViewDetail = new javax.swing.JButton();
        btnDeleteAcct = new javax.swing.JButton();
        btnSearchAcct = new javax.swing.JButton();
        txtSearchAcct = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(800, 600));

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Vehicles");

        tblManageVehicle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Owner ID", "Vehicle ID", "Service Opted", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManageVehicle);
        if (tblManageVehicle.getColumnModel().getColumnCount() > 0) {
            tblManageVehicle.getColumnModel().getColumn(0).setResizable(false);
            tblManageVehicle.getColumnModel().getColumn(1).setResizable(false);
            tblManageVehicle.getColumnModel().getColumn(2).setResizable(false);
            tblManageVehicle.getColumnModel().getColumn(3).setResizable(false);
        }

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewDetail.setText("View Detail");
        btnViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailActionPerformed(evt);
            }
        });

        btnDeleteAcct.setText("Delete Account");
        btnDeleteAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAcctActionPerformed(evt);
            }
        });

        btnSearchAcct.setText("Search Account");
        btnSearchAcct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAcctActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 26, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addGap(678, 678, 678)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeleteAcct)
                            .addComponent(btnViewDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(txtSearchAcct, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchAcct))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDeleteAcct, btnViewDetail});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchAcct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchAcct))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnViewDetail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteAcct)
                .addContainerGap(191, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailActionPerformed
        Owner o = null;
        
        int selectedRow = hasSelection();
        if (selectedRow != -1) {
            o = (Owner) tblManageVehicle.getValueAt(selectedRow, 0);
        }
        
        VehicleViewJPanel viewJPanel = new VehicleViewJPanel(mainWorkArea, o);
        mainWorkArea.add("VehicleView", viewJPanel);
        resizeJFrameAndNavigate(800);
        
    }//GEN-LAST:event_btnViewDetailActionPerformed

    private void btnSearchAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAcctActionPerformed
       
        String s = txtSearchAcct.getText().trim();
        System.err.println("input string: " + s);
        if (s.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter id or name of the vehicle", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        ArrayList<Owner> searchedItems = new ArrayList<>();
        
        for (Owner o : ownerDir.getOwnerDirectory()) {
            System.out.println("search: owner id" + o.getId() + ", vehicle id" + o.getVehicle().getId());
            Vehicle v = o.getVehicle();
            if (s.equals(v.getId()) || s.equalsIgnoreCase(v.getModel())) {
                searchedItems.add(o);
            }
        }
        
        if (searchedItems.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No vehicle found", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (searchedItems.size() > 1) {
            DefaultTableModel tableM = (DefaultTableModel) tblManageVehicle.getModel();
            tableM.setRowCount(0);

            // ownerid, vehicleid, serviceopted, cost
            for (Owner o : searchedItems) {
                Object row[] = new Object[4];
                Vehicle v = o.getVehicle();
                row[0] = o;
                row[1] = v;
                row[2] = v.getServiceOpted();
                row[3] = v.getServiceOpted().getCost();

                tableM.addRow(row);
            }
        } else if (searchedItems.size() == 1) {
            VehicleViewJPanel viewJPanel = new VehicleViewJPanel(mainWorkArea, searchedItems.get(0));
            mainWorkArea.add("VehicleView", viewJPanel);
            resizeJFrameAndNavigate(800);
        }
        
    }//GEN-LAST:event_btnSearchAcctActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        mainWorkArea.remove(this);
        CardLayout ly = (CardLayout) mainWorkArea.getLayout();
        ly.previous(mainWorkArea);
        
        refreshTable();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteAcctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAcctActionPerformed
        Owner o = null;
        
        int selectedRow = hasSelection();
        if (selectedRow != -1) {
            o = (Owner) tblManageVehicle.getValueAt(selectedRow, 0);
        }
        
        ownerDir.removeOwner(o);
        refreshTable();
    }//GEN-LAST:event_btnDeleteAcctActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteAcct;
    private javax.swing.JButton btnSearchAcct;
    private javax.swing.JButton btnViewDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblManageVehicle;
    private javax.swing.JTextField txtSearchAcct;
    // End of variables declaration//GEN-END:variables

    public void refreshTable() {
        DefaultTableModel tableM = (DefaultTableModel) tblManageVehicle.getModel();
        tableM.setRowCount(0);
        
        // ownerid, vehicleid, serviceopted, cost
        for (Owner o : ownerDir.getOwnerDirectory()) {
            Object row[] = new Object[4];
            Vehicle v = o.getVehicle();
            row[0] = o;
            row[1] = v;
            row[2] = v.getServiceOpted();
            row[3] = v.getServiceOpted().getCost();
            
            tableM.addRow(row);
        }
    }
    
    /**
    * Checks if a row is selected in the table.
    *
    * @return the index of the selected row, or -1 if no row is selected.
    *         Displays a warning message if no selection is made.
    */
    public int hasSelection() {
        int row = tblManageVehicle.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select the item first!", "Warning", JOptionPane.WARNING_MESSAGE);
            return -1;
        }
        
        return row;
    }
    
    public void resizeJFrameAndNavigate(int height) {
        JFrame frame = (JFrame) javax.swing.SwingUtilities.getWindowAncestor(mainWorkArea);
        if (frame != null) {
            frame.setSize(800, height);
            frame.revalidate();
            frame.repaint();
        }
        
        CardLayout ly = (CardLayout) mainWorkArea.getLayout();
        ly.next(mainWorkArea);
        
        mainWorkArea.revalidate(); 
        mainWorkArea.repaint();
    }
}
