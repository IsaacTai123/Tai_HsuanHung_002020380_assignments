/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Admin;

import common.Role;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import model.Author;
import model.AuthorDirectory;
import model.BookCollection;
import model.BranchManager;
import model.EmployeeDirectory;
import model.LibraryDirectory;
import model.UserDirectory;
import utils.NavigationUtils;

/**
 *
 * @author tisaac
 */
public class AdminWorkspace extends javax.swing.JPanel {
    
    UserDirectory userList;
    LibraryDirectory libList;
    EmployeeDirectory emList;
    BookCollection allBooks;
    NavigationUtils nv;
    AuthorDirectory authorList;
    

    /**
     * Creates new form AdminWorkspace
     */
    public AdminWorkspace(NavigationUtils nv) {
        initComponents();
        this.nv = nv;
        fakeDataGenerator();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnManageUserAccounts = new javax.swing.JButton();
        btnManageBranches = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        btnManageUserAccounts.setText("Manage User Accounts");
        btnManageUserAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageUserAccountsActionPerformed(evt);
            }
        });

        btnManageBranches.setText("Manage Branches");
        btnManageBranches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageBranchesActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Admin Workspace");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnManageBranches, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManageUserAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(btnManageUserAccounts)
                .addGap(28, 28, 28)
                .addComponent(btnManageBranches)
                .addContainerGap(372, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageUserAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageUserAccountsActionPerformed
        ManageUserAccount mngUser = new ManageUserAccount(nv);
        nv.showCard(mngUser, "ManageUserAccount");
    }//GEN-LAST:event_btnManageUserAccountsActionPerformed

    private void btnManageBranchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageBranchesActionPerformed
        ManageLibraryBranch mngLibrary = new ManageLibraryBranch(nv);
        nv.showCard(mngLibrary, "ManageLibraryBranch");
    }//GEN-LAST:event_btnManageBranchesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnManageBranches;
    private javax.swing.JButton btnManageUserAccounts;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables


    private void fakeDataGenerator() {
        try {
            this.userList = UserDirectory.getInstance();
            this.libList = LibraryDirectory.getInstance();
            this.emList = EmployeeDirectory.getInstance();
            this.allBooks = BookCollection.getInstance();
            this.authorList = AuthorDirectory.getInstance();

            // Branch Manager
            BranchManager bm1 = userList.createBranchManager("Alice Johnson", "alicepwd", Role.BRANCH_MANAGER);
            BranchManager bm2 = userList.createBranchManager("Bob Smith", "bobpwd", Role.BRANCH_MANAGER);

            // Library
            libList.addLibrary("Central Library", 101, bm1);
            libList.addLibrary("Westside Library", 202, bm2);

            // Admin
            userList.createAdmin("AdminUser", "adminpwd", Role.ADMIN);

            // Custom
            userList.createCustomer("Tom Hanks", "tom123", Role.CUSTOMER);
            userList.createCustomer("Emma Watson", "emma456", Role.CUSTOMER);
            userList.createCustomer("Chris Evans", "chris789", Role.CUSTOMER);
            
            // Authors
            Author jk = authorList.addAuthor("J.K. Rowling", "UK");
            Author grr = authorList.addAuthor("George R.R. Martin", "USA");
            Author hm = authorList.addAuthor("Haruki Murakami", "Japan");
            Author ja = authorList.addAuthor("Jane Austen", "UK");
            Author sk = authorList.addAuthor("Stephen King", "USA");

            // Books
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            allBooks.addNewBook("Harry Potter", sdf.parse("2024-01-01"), libList.getLibraryByName("Central Library"), jk, 200);
            allBooks.addNewBook("Game of Thrones", sdf.parse("2024-01-02"), libList.getLibraryByName("Central Library"), grr, 100);
            allBooks.addNewBook("Norwegian Wood", sdf.parse("2024-01-03"), libList.getLibraryByName("Westside Library"), hm, 1230);
            allBooks.addNewBook("Pride and Prejudice", sdf.parse("2024-01-04"), libList.getLibraryByName("Westside Library"), jk, 2340);
            allBooks.addNewBook("The Shining", sdf.parse("2024-01-05"), libList.getLibraryByName("Central Library"), jk, 999);
            
        } catch (Exception e) {
            System.out.println("Error configuring system: " + e.getMessage());
        }
        
    }
}
