/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.BranchManager;

import common.RequestStatus;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Book;
import model.BookCollection;
import model.BranchManager;
import model.Library;
import model.RentalRequest;
import model.RentalRequestDirectory;
import utils.NavigationUtils;

/**
 *
 * @author tisaac
 */
public class ManageRentalRequests extends javax.swing.JPanel {

    NavigationUtils nv;
    BookCollection allBooks;
    Library selectedLib;
    RentalRequestDirectory requestList;
    
    /**
     * Creates new form ManageRentalRequests
     */
    public ManageRentalRequests(NavigationUtils nv, Library selectedLib) {
        initComponents();
        this.nv = nv;
        this.selectedLib = selectedLib;
        requestList = RentalRequestDirectory.getInstance();
        populateRentalRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAccept = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRentalRequests = new javax.swing.JTable();
        btnReject = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblRentalRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Book Name", "Customer", "Status", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRentalRequests);
        if (tblRentalRequests.getColumnModel().getColumnCount() > 0) {
            tblRentalRequests.getColumnModel().getColumn(0).setResizable(false);
            tblRentalRequests.getColumnModel().getColumn(1).setResizable(false);
            tblRentalRequests.getColumnModel().getColumn(2).setResizable(false);
            tblRentalRequests.getColumnModel().getColumn(3).setResizable(false);
            tblRentalRequests.getColumnModel().getColumn(4).setResizable(false);
        }

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Rental Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnReject))
                .addGap(60, 60, 60))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        int selectedRow = tblRentalRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a request first!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        RentalRequest request = (RentalRequest) tblRentalRequests.getValueAt(selectedRow, 0);

        request.setStatus(RequestStatus.Accepted);

        // Update book status prevent someone else to rent
        Book rentedBook = request.getBook();
        rentedBook.setIsAvailable(false);

        JOptionPane.showMessageDialog(this, "Request accepted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        
        // Refresh table
        populateRentalRequestTable();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        int selectedRow = tblRentalRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a request first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        RentalRequest request = (RentalRequest) tblRentalRequests.getValueAt(selectedRow, 0);

        if (request.getStatus() != RequestStatus.Pending) {
            JOptionPane.showMessageDialog(this, "This request has already been processed.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Book rentedBook = request.getBook();
        rentedBook.setIsAvailable(true);
        
        request.setStatus(RequestStatus.Rejected);
        JOptionPane.showMessageDialog(this, "Request rejected successfully!", "Rejected", JOptionPane.INFORMATION_MESSAGE);

        // Refresh table
        populateRentalRequestTable();
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        nv.goBack();
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReject;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblRentalRequests;
    // End of variables declaration//GEN-END:variables

    private void populateRentalRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblRentalRequests.getModel();
        model.setRowCount(0);

        for (RentalRequest request : requestList.getRequestsByLibrary(selectedLib)) {

            if(request.getStatus() == RequestStatus.Pending) {
                Object[] row = new Object[5];

                row[0] = request;
                row[1] = request.getBook().getName();
                row[2] = request.getCustomer().getName();
                row[3] = request.getStatus().toString();
                row[4] = request.getPrice();
                model.addRow(row);
            }
        }
    }
}
